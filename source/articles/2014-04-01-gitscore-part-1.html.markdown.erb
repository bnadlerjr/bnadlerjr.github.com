---
id: 89a0a79c-3d56-4a61-a2ed-b90d2730db55
title: GitScore Part 1
date: 2014-04-01
description: "Screencast showing an example workflow for creating a Sinatra web application."
image: "scoreboard.jpg"
alt: "Scoreboard"
source: "tyosshiman"
url: "https://flic.kr/p/gphHjQ"
data_proofer_ignore: true
---
UPDATE: [Parts 2 & 3](/articles/2014/05/17/gitscore-parts-2-3.html) are now done.

Recently I've been playing around with Screenflow, creating screencasts illustrating how I build Sinatra applications in Ruby. My goal was to create a few well-polished screencasts, but finding the time is hard. In addition, since my video editing ability is not quite there yet, it takes me a long time. In the interest of getting something out there for people to look at, I'm going to release a few short screencasts that have not been highly edited, so you'll get to see my mistakes.

For this first set of screencasts, the idea came from watching a [Peepcode Play by Play](http://pluralsight.com/training/Courses/Description/play-by-play-yehuda-katz). The goal is to create an app that "scores" GitHub activity. The basic premise is to request a user's public activity, and then based on the events in the timeline, assign a score to each. For example, a "WatchEvent" occurs when a user watches a repository. It is worth one point.

I'm not going to go into much detail about how I implemented a solution, but I do want to give you a bit more context that I did not put into the video. First, I'm using Hoboken to generate the Sinatra application skeleton. [Hoboken](http://rubygems.org/gems/hoboken) is another project that I've been working on that generates Sinatra applications. I haven't released an official version yet, but I've been using for a few of my own projects for a few months now. Check out its [README](https://github.com/bnadlerjr/hoboken) for more info. I'll write another post going into detail about it soon.

I also used this project to explore the idea of the [Ports and Adapters](http://alistair.cockburn.us/Hexagonal+architecture) pattern. In the video I show how I create an adapter for the GitHub data. The screencast also shows leveraging [Sinatra's settings feature](http://www.sinatrarb.com/configuration.html) to inject the GitHub adapter.

Part one of this series shows how I set up the project and get a minimal round trip implementation set up that queries GitHub and shows something on the page. Later this week I'll put up the next videos that show the scoring implementation. I hope you enjoy it!

<iframe width="640" height="360" src="//www.youtube.com/embed/cMtNJwKuDhA?rel=0" allowfullscreen></iframe>
